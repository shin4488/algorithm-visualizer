name: Lint and format

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  eslint:
    name: ESLint (reviewdog)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Collect files for ESLint
        id: eslint-files
        run: |
          files=$(git diff --name-only --diff-filter=ACMRTUXB origin/${{ github.event.pull_request.base.ref }}...HEAD | grep -E '\.(js|jsx|ts|tsx)$' || true)
          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          echo "$files" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Run ESLint with reviewdog
        if: steps.eslint-files.outputs.files != ''
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail
          node ./scripts/run-eslint-ci.mjs ${{ steps.eslint-files.outputs.files }} \
            | reviewdog -f=eslint \
              -name=eslint \
              -reporter=github-pr-review \
              -filter-mode=diff_context \
              -fail-on-error=true
      - name: Skip ESLint (no changed files)
        if: steps.eslint-files.outputs.files == ''
        run: echo "No files to lint"

  prettier:
    name: Prettier (reviewdog)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Collect files for Prettier
        id: prettier-files
        run: |
          files=$(git diff --name-only --diff-filter=ACMRTUXB origin/${{ github.event.pull_request.base.ref }}...HEAD | grep -E '\.(js|jsx|ts|tsx|css|scss|json|md)$' || true)
          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          echo "$files" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Run Prettier with reviewdog
        if: steps.prettier-files.outputs.files != ''
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail
          node ./scripts/prettier-list-different.mjs ${{ steps.prettier-files.outputs.files }} \
            | reviewdog -f=rdjson \
              -name=prettier \
              -reporter=github-pr-review \
              -filter-mode=diff_context \
              -fail-on-error=true
      - name: Skip Prettier (no changed files)
        if: steps.prettier-files.outputs.files == ''
        run: echo "No files to format"
